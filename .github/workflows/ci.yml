# This workflow will build the main SET application and publish it to GitHub Packages
name: Build SET

on: 
  repository_dispatch:
  pull_request:
  push:
    tags:
      - 'v**'
    branches:
      - 'release/**'
      - 'main'
    paths-ignore:
      - DEPENDENCIES

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  DEPLOY_DIR: ${{ github.workspace }}/java-test/m2deploy
  TEST_APPLICATION_DIR: ${{ github.workspace }}/java-test/application-under-test

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Asciidoctor & Hugo
        uses: eclipse-set/build/.github/actions/setup-asciidoctor@main

      - name: Build About
        run: hugo
        working-directory: web/about
        
      - name: Store artifact
        uses: actions/upload-artifact@v4
        with:
          name: about-artifact
          path: web/about/dist
          retention-days: 1

  developerhelp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Asciidoctor & Hugo
        uses: eclipse-set/build/.github/actions/setup-asciidoctor@main

      - name: Build About
        run: hugo
        working-directory: web/developerhelp

      - name: Store artifact
        uses: actions/upload-artifact@v4
        with:
          name: developerhelp-artifact
          path: web/developerhelp/dist
          retention-days: 1          

  textviewer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          npm ci
          npm run build
        working-directory: web/textviewer
      - name: Store artifact
        uses: actions/upload-artifact@v4
        with:
          name: textviewer-artifact
          path: web/textviewer/dist
          retention-days: 1
          
  pdfviewer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          wget --no-verbose -O pdfjs.zip https://github.com/mozilla/pdf.js/releases/download/v$(node getVersion.js)/pdfjs-$(node getVersion.js)-dist.zip
          npm ci
          npm run build
        working-directory: web/pdf
      - name: Store artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdfviewer-artifact
          path: web/pdf/dist
          retention-days: 1

  siteplan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          npm ci
          npm run build-prod
        working-directory: web/siteplan
      - name: Store artifact
        uses: actions/upload-artifact@v4
        with:
          name: siteplan-artifact
          path: web/siteplan/dist
          retention-days: 1

  news:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: eclipse-set/build/.github/actions/setup-java@main

      - name: Install Asciidoctor & Hugo
        uses: eclipse-set/build/.github/actions/setup-asciidoctor@main

      - name: Build Release Notes
        run: mvn -Dnote-file-path="${{github.workspace}}/RELEASE_NOTES.md" clean compile
        working-directory: web/news

      - name: Store artifact
        uses: actions/upload-artifact@v4
        with:
          name: news-artifact
          path: web/news/public
          retention-days: 1

  java:
    runs-on: ubuntu-latest
    needs:
      - docs
      - textviewer
      - pdfviewer
      - siteplan
      - developerhelp
      - news
    permissions:
      contents: write
      packages: write
      checks: write
      pull-requests: write
      actions: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        if: github.ref == 'refs/heads/main'
        with:
          languages: java, javascript
          config: |
            paths-ignore: 
              - '**/dist/**'
              - '**/target/**'
              - '**/siteplan/assets/**'
              - '**/monaco/vs/**'
      
      - name: Setup Java
        uses: eclipse-set/build/.github/actions/setup-java@main
      
      - name: Fetch pdf viewer
        uses: actions/download-artifact@v4
        with:
          name: pdfviewer-artifact
          path: web/pdf/dist
      
      - name: Fetch text viewer
        uses: actions/download-artifact@v4
        with:
          name: textviewer-artifact
          path: web/textviewer/dist
      
      - name: Fetch about
        uses: actions/download-artifact@v4
        with:
          name: about-artifact
          path: web/about/dist   

      - name: Fetch siteplan
        uses: actions/download-artifact@v4
        with:
          name: siteplan-artifact
          path: web/siteplan/dist

      - name: Fetch developerhelp
        uses: actions/download-artifact@v4
        with:
          name: developerhelp-artifact
          path: web/developerhelp/dist

      - name: Fetch news
        uses: actions/download-artifact@v4
        with:
          name: news-artifact
          path: web/news/public

      - name: Build
        run: mvn -T 1.5C -B clean deploy --settings .github/settings.xml -DaltDeploymentRepository=local::file://${{ github.workspace }}/set-m2deploy
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: eclipse-set-snapshot-${{github.run_number}}
          path: java/bundles/org.eclipse.set.releng.set.product/target/products/SET/win32/win32/x86_64/
          retention-days: 7

      - name: Upload m2repo artifact
        uses: actions/upload-artifact@v4
        with:
          name: set-m2deploy-${{github.run_number}}
          path: ${{ github.workspace}}/set-m2deploy
          retention-days: 1
      
      - name: Publish
        run: mvn -T 1.5C -B deploy --settings .github/settings.xml -DaltDeploymentRepository=set-github::https://maven.pkg.github.com/${{ github.repository }}
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Prepare release asset
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=$(echo ${{ github.ref_name }} | cut -c 2-)
          mv *.zip unsigned-Eclipse-SET-$VERSION.zip
        working-directory: java/bundles/org.eclipse.set.releng.set.product/target/products

      - name: Upload release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0 # v2.0.6
        with: 
          files: java/bundles/org.eclipse.set.releng.set.product/target/products/unsigned-Eclipse-SET-*.zip
          
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@30eadd5010312f995f0d3b3cff7fe2984f69409e # v2.16.1
        if: always()
        with:
          files: |
            ${{ github.workspace }}/**/surefire-reports/*.xml

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        if: github.ref == 'refs/heads/main'

  swtbot:
    runs-on: windows-latest
    needs:
      - java
    permissions:
      contents: write
      checks: write
      pull-requests: write
      actions: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: eclipse-set/build/.github/actions/setup-java@main
        
      - name: Fetch SET
        uses: actions/download-artifact@v4
        with:
          name: eclipse-set-snapshot-${{github.run_number}}
          path: ${{ env.TEST_APPLICATION_DIR }}

      - name: Fetch m2 Deploy
        uses: actions/download-artifact@v4
        with:
          name: set-m2deploy-${{github.run_number}}
          path: ${{ env.DEPLOY_DIR }}

      - name: Run Test
        shell: bash
        run: |
          mvn -T 1.5C -U -B -f java-test/pom.xml clean verify  \
            --settings ./.github/settings.xml \
            -Dskip-test=false \
            -Dm2-repo-path="file://${{ env.DEPLOY_DIR }}" \
            -Dapplication-under-test="${{ env.TEST_APPLICATION_DIR }}" \

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/windows@30eadd5010312f995f0d3b3cff7fe2984f69409e # v2.16.1
        if: always()
        with:
          check_name: "SWTBot Test"
          files: |
            ${{ github.workspace }}/**/surefire-reports/*.xml
